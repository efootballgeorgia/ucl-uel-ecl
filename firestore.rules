rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- HELPER FUNCTIONS ---

    function isAdmin() {
      // Returns true if the requesting user's UID exists in the 'admins' collection.
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isValidMatchData(matchData) {
      // Enforces that scores are non-negative integers.
      return matchData.homeScore is int &&
             matchData.awayScore is int &&
             matchData.homeScore >= 0 &&
             matchData.awayScore >= 0;
    }

    function isOwner(userId) {
      // Returns true if the requesting user is the owner of the document.
      return request.auth.uid == userId;
    }


    // --- COLLECTION RULES ---

    match /leagues/{league} {
      allow read: if true;
      allow write: if false; // League configuration is read-only from the client.
    }

    match /admins/{userId} {
      // CORRECTED: A user can check THEIR OWN admin status, but not others.
      allow read: if isOwner(userId);
      allow write: if false; // CRITICAL: Admin roles must be managed from the Firebase Console.
    }

    // --- Match Collections ---
    match /uclMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /uelMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /eclMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }

    // --- Knockout Match Collections ---
    match /uclKnockoutMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /uelKnockoutMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /eclKnockoutMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
  }
}
