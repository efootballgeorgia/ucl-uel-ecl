rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- HELPER FUNCTIONS ---

    // Checks if the requesting user's UID exists in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Validates the data for a match document.
    // Ensures scores are non-negative integers.
    function isValidMatchData(matchData) {
      return matchData.homeScore is int &&
             matchData.awayScore is int &&
             matchData.homeScore >= 0 &&
             matchData.awayScore >= 0;
    }


    // --- COLLECTION RULES ---

    // Rules for League Configuration documents (e.g., /leagues/ucl)
    match /leagues/{league} {
      allow read: if true;
      allow write: if false; // Prevent client-side modification
    }

    // Rules for the 'admins' collection itself.
    match /admins/{userId} {
      allow read: if isAdmin();
      allow write: if false; // CRITICAL: Must be managed from Firebase Console
    }

    // Rules for the REGULAR season match collections.
    match /uclMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /uelMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /eclMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }

    // Rules for the KNOCKOUT stage match collections.
    match /uclKnockoutMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /uelKnockoutMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
    match /eclKnockoutMatches/{matchId} {
      allow read: if true;
      allow create, update: if isAdmin() && isValidMatchData(request.resource.data);
      allow delete: if isAdmin();
    }
  }
}
